{"version":3,"sources":["serviceWorker.js","consts/index.js","reducers/data.js","reducers/index.js","utils/index.js","reducers/activePage.js","actions/index.js","api/index.js","sagas/data.js","sagas/index.js","store/index.js","components/Wave/index.js","components/Loader/index.js","components/Error/index.js","components/TableRow/index.js","components/Table/index.js","components/PaginationElement/index.js","components/Pagination/index.js","components/EmptyPage/index.js","containers/Home/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","FETCHED_DATA","URL","concat","localStorageData","localStorage","emptyPageSizes","size","offset","dotsList","id","baseClassName","initState","result","loading","page","rootReducer","combineReducers","data","arguments","length","undefined","_ref","type","payload","pages","financials","myArray","chunkSize","results","subArray","splice","push","chunkArray","list","i","getPages","Object","objectSpread","droppableIndexStart","droppableIndexEnd","activePage","currentPageIndex","_financials$currentPa","apply","toConsumableArray","dragging","requestData","requestDataSuccess","requestDataError","fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","res","json","sent","abrupt","t0","Error","stop","this","fetchDataAsync","watchFetchData","rootSaga","put","call","delay","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","root","fork","sagas_marked","preloadedState","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","load","namespace","store","createStore","applyMiddleware","save","run","sagas","Wave","className","react_default","createElement","map","_ref2","key","cn","defaultProps","Loader","Spinner","color","components_Wave","onClick","reload","TableRow","index","reportDate","totalAssets","totalCash","totalDebt","react_beautiful_dnd_esm","draggableId","draggableProps","innerRef","dragHandleProps","assign","ref","scope","MyTable","sortDrag","onDragEnd","destination","source","destinationIndex","Table","bordered","striped","hover","responsive","droppableId","_ref3","droppableProps","placeholder","item","items","flat","indexOf","getIndex","components_TableRow","PaginationElement","changePage","PaginationItem","PaginationLink","MyPagination","isFirstPage","isLastPage","Pagination","disabled","first","previous","components_PaginationElement","last","xs","lg","md","sm","EmptyPage","Col","enhance","connect","Home","props","_this$props","_this$props$data","_this$props$data$resu","_this$props$data$page","notEmtyTable","notEmtyPagination","isEmtyPage","Container","fluid","Row","components_Loader","components_Error","components_Table","components_Pagination","components_EmptyPage","Component","App","es","react_router_dom","basename","react_router","exact","path","component","HomePage","ReactDOM","render","components_App","document","getElementById","process","href","origin","addEventListener","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.55071592.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          /* eslint-disable no-console */\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n          /* eslint-enable */\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              /* eslint-disable no-console */\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n              /* eslint-enable */\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              /* eslint-disable no-console */\n              console.log('Content is cached for offline use.');\n              /* eslint-enable */\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      /* eslint-disable no-console */\n      console.error('Error during service worker registration:', error);\n      /* eslint-enable */\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log('No internet connection found. App is running in offline mode.');\n      /* eslint-enable */\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const REQUESTED_DATA = 'REQUESTED_DATA';\nexport const REQUESTED_DATA_SUCCEEDED = 'REQUESTED_DATA_SUCCEEDED';\nexport const REQUESTED_DATA_FAILED = 'REQUESTED_DATA_FAILED';\nexport const FETCHED_DATA = 'FETCHED_DATA';\n\nexport const DRAG_HAPPEND = 'DRAG_HAPPEND';\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const DATA_PER_PAGE = 10;\n\nconst BASE_PATH = 'https://sandbox.iexapis.com/stable';\nconst ENDPOINT_PATH = '/stock/AAPL/financials/12';\nconst QUERY_PARAM = 'token=';\nconst API_KEY = 'Tpk_d232dd87ed34407dacc92eee1edbf407';\nexport const URL = `${BASE_PATH}${ENDPOINT_PATH}?${QUERY_PARAM}${API_KEY}`;\n\nexport const localStorageKey = 'applicationState';\nexport const localStorageData = localStorage[localStorageKey];\n\nexport const emptyPageSizes = {\n  xs: 12,\n  sm: { size: 10, offset: 1 },\n  md: { size: 8, offset: 2 },\n  lg: { size: 6, offset: 3 }\n};\n\nexport const dotsList = [\n  { id: 1, baseClassName: 'dot' },\n  { id: 2, baseClassName: 'dot' },\n  { id: 3, baseClassName: 'dot' }\n];\n","import { REQUESTED_DATA, REQUESTED_DATA_SUCCEEDED, REQUESTED_DATA_FAILED, DATA_PER_PAGE, DRAG_HAPPEND } from '../consts';\n\nimport { chunkArray, getPages, dragging } from '../utils';\n\nexport const initState = {\n  result: {},\n  loading: false,\n  error: false,\n  page: []\n};\n\nexport default (state = initState, { type, result, payload }) => {\n  switch (type) {\n    case REQUESTED_DATA: {\n      return {\n        result: {},\n        loading: true,\n        error: false,\n        pages: []\n      };\n    }\n    case REQUESTED_DATA_SUCCEEDED: {\n      const { financials: data } = result;\n      const financials = chunkArray(data, DATA_PER_PAGE);\n      const pages = getPages(financials);\n\n      return {\n        result: {\n          ...result,\n          financials\n        },\n        loading: false,\n        error: false,\n        pages\n      };\n    }\n    case REQUESTED_DATA_FAILED: {\n      return {\n        result: {},\n        loading: false,\n        error: true,\n        pages: []\n      };\n    }\n    case DRAG_HAPPEND: {\n      const { droppableIndexStart, droppableIndexEnd, activePage } = payload;\n      const { result } = state;\n      const { financials: data } = result;\n      const currentPageIndex = activePage - 1;\n\n      const financials = dragging(droppableIndexStart, droppableIndexEnd, data, currentPageIndex);\n\n      return {\n        ...state,\n        result: {\n          ...result,\n          financials\n        }\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport data from './data';\nimport activePage from './activePage';\n\nconst rootReducer = combineReducers({\n  data,\n  activePage\n});\n\nexport default rootReducer;\n","export const getIndex = (items, item) => {\n  const flatItems = items.flat();\n  const index = flatItems.indexOf(item) + 1;\n\n  return index;\n};\n\nexport const chunkArray = (myArray, chunkSize) => {\n  const results = [];\n\n  while (myArray.length) {\n    const subArray = myArray.splice(0, chunkSize);\n\n    results.push(subArray);\n  }\n\n  return results;\n};\n\nexport const getPages = list => {\n  const pages = [];\n\n  for (let i = 1; i <= list.length; i++) {\n    pages.push(i);\n  }\n\n  return pages;\n};\n\nexport const dragging = (droppableIndexStart, droppableIndexEnd, financials, currentPageIndex) => {\n  if (droppableIndexStart !== droppableIndexEnd) {\n    const list = financials[currentPageIndex].splice(droppableIndexStart, 1);\n    financials[currentPageIndex].splice(droppableIndexEnd, 0, ...list);\n  }\n\n  return financials;\n};\n","import { CHANGE_PAGE } from '../consts';\n\nexport const initState = 1;\n\nexport default (state = initState, { type, page }) => {\n  switch (type) {\n    case CHANGE_PAGE:\n      return page;\n    default:\n      return state;\n  }\n};\n","import { REQUESTED_DATA, REQUESTED_DATA_SUCCEEDED, REQUESTED_DATA_FAILED, FETCHED_DATA, DRAG_HAPPEND, CHANGE_PAGE } from '../consts';\n\nexport const requestData = () => ({ type: REQUESTED_DATA });\nexport const requestDataSuccess = result => ({ type: REQUESTED_DATA_SUCCEEDED, result });\nexport const requestDataError = () => ({ type: REQUESTED_DATA_FAILED });\nexport const fetchData = () => ({ type: FETCHED_DATA });\n\nexport const sortDrag = (droppableIndexStart, droppableIndexEnd, activePage) => ({\n  type: DRAG_HAPPEND,\n  payload: {\n    droppableIndexStart,\n    droppableIndexEnd,\n    activePage\n  }\n});\n\nexport const changePage = page => ({ type: CHANGE_PAGE, page });\n","import { URL } from '../consts';\n\nexport const fetchData = async () => {\n  try {\n    const response = await fetch(URL).then(res => res.json());\n    return response;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n","import { takeLatest, put, call, all, delay } from 'redux-saga/effects';\n\nimport { requestData, requestDataSuccess, requestDataError } from '../actions';\n\nimport { FETCHED_DATA } from '../consts';\n\nimport { fetchData } from '../api';\n\nexport function* fetchDataAsync() {\n  try {\n    yield put(requestData());\n    const data = yield call(fetchData);\n    yield delay(400);\n    yield put(requestDataSuccess(data));\n  } catch {\n    yield put(requestDataError());\n  }\n}\n\nexport function* watchFetchData() {\n  yield takeLatest(FETCHED_DATA, fetchDataAsync);\n}\n\nexport default function* rootSaga() {\n  yield all([watchFetchData()]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport data from './data';\n\nexport default function* root() {\n  yield all([fork(data)]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { save, load } from 'redux-localstorage-simple';\n\nimport { localStorageKey } from '../consts';\n\nimport rootReducer from '../reducers/';\n\nimport sagas from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst persistedState = load({ namespace: localStorageKey });\n\nconst configureStore = preloadedState => createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(sagaMiddleware, save({ namespace: localStorageKey }))));\n\nconst store = configureStore(persistedState);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { dotsList } from '../../consts';\n\nconst Wave = ({ className }) => (\n  <span id=\"wave\">\n    {dotsList.map(({ id, baseClassName }) => (\n      <span key={id} className={cn(baseClassName, className)} />\n    ))}\n  </span>\n);\n\nWave.propTypes = {\n  className: PropTypes.string\n};\n\nWave.defaultProps = {\n  className: 'bg-primary'\n};\n\nexport default Wave;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nimport Wave from '../Wave';\n\nconst Loader = () => (\n  <div className=\"center\">\n    <Spinner color=\"primary\" />\n    <p className=\"text-primary\">\n      Loading\n      <Wave className=\"bg-primary\" />\n    </p>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\n\nimport Wave from '../Wave';\n\nconst Error = () => (\n  <div className=\"center\">\n    <p className=\"text-danger\">\n      Error, please clear cache and try again\n      <Wave className=\"bg-danger\" />\n    </p>\n    <button type=\"button\" className=\"btn btn-outline-danger btn-block\" onClick={() => window.location.reload()}>\n      Reload\n    </button>\n  </div>\n);\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst TableRow = ({ index, id, reportDate, totalAssets, totalCash, totalDebt }) => (\n  <Draggable draggableId={`${id}`} index={id}>\n    {({ draggableProps, innerRef, dragHandleProps }) => (\n      <tr {...draggableProps} ref={innerRef} {...dragHandleProps}>\n        <th scope=\"row\">{index}</th>\n        <td>{reportDate}</td>\n        <td>{totalAssets}</td>\n        <td>{totalCash}</td>\n        <td>{totalDebt}</td>\n      </tr>\n    )}\n  </Draggable>\n);\n\nTableRow.propTypes = {\n  reportDate: PropTypes.string,\n  totalAssets: PropTypes.number,\n  totalCash: PropTypes.number,\n  totalDebt: PropTypes.number,\n  id: PropTypes.number,\n  index: PropTypes.number\n};\n\nTableRow.defaultProps = {\n  reportDate: '',\n  totalAssets: 0,\n  totalCash: 0,\n  totalDebt: 0,\n  id: 0,\n  index: 1\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'reactstrap';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport { getIndex } from '../../utils';\n\nimport TableRow from '../TableRow';\n\nconst MyTable = ({ sortDrag, result, activePage }) => {\n  const onDragEnd = ({ destination, source: { index } }) => {\n    if (!destination) {\n      return;\n    }\n\n    const { index: destinationIndex } = destination;\n\n    sortDrag(index, destinationIndex, activePage);\n  };\n\n  const currentPageIndex = activePage - 1;\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Table bordered striped hover responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Report date</th>\n            <th>Total assets</th>\n            <th>Total cash</th>\n            <th>Total debt</th>\n          </tr>\n        </thead>\n        <Droppable droppableId=\"tbody\">\n          {({ droppableProps, innerRef, placeholder }) => (\n            <tbody {...droppableProps} ref={innerRef}>\n              {result[currentPageIndex].map((item, i) => {\n                const { reportDate, totalAssets, totalCash, totalDebt } = item;\n                const index = getIndex(result, item);\n\n                return <TableRow key={i} index={index} id={i} reportDate={reportDate} totalAssets={totalAssets} totalCash={totalCash} totalDebt={totalDebt} />;\n              })}\n              {placeholder}\n            </tbody>\n          )}\n        </Droppable>\n      </Table>\n    </DragDropContext>\n  );\n};\n\nMyTable.propTypes = {\n  sortDrag: PropTypes.func,\n  result: PropTypes.array.isRequired,\n  activePage: PropTypes.number\n};\n\nMyTable.defaultProps = {\n  sortDrag: () => {},\n  activePage: 1\n};\n\nexport default MyTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PaginationItem, PaginationLink } from 'reactstrap';\n\nconst PaginationElement = ({ page, activePage, changePage }) => (\n  <PaginationItem id={`item_${page}`} className={page === activePage ? 'active' : ''}>\n    <PaginationLink id={page} onClick={() => changePage(page)}>\n      {page}\n    </PaginationLink>\n  </PaginationItem>\n);\n\nPaginationElement.propTypes = {\n  changePage: PropTypes.func,\n  page: PropTypes.number,\n  activePage: PropTypes.number\n};\n\nPaginationElement.defaultProps = {\n  changePage: () => {},\n  page: 1,\n  activePage: 1\n};\n\nexport default PaginationElement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nimport PaginationElement from '../PaginationElement';\n\nconst MyPagination = ({ pages, activePage, changePage }) => {\n  const isFirstPage = activePage === 1 && true;\n  const isLastPage = activePage === pages[pages.length - 1] && true;\n\n  return (\n    <Pagination>\n      <PaginationItem disabled={isFirstPage}>\n        <PaginationLink onClick={() => changePage(pages[0])} first />\n      </PaginationItem>\n      <PaginationItem disabled={isFirstPage}>\n        <PaginationLink onClick={() => changePage(activePage - 1)} previous />\n      </PaginationItem>\n      {pages.map(page => (\n        <PaginationElement key={page} page={page} activePage={activePage} changePage={() => changePage(page)} />\n      ))}\n      <PaginationItem disabled={isLastPage}>\n        <PaginationLink onClick={() => changePage(activePage + 1)} next />\n      </PaginationItem>\n      <PaginationItem disabled={isLastPage}>\n        <PaginationLink onClick={() => changePage(pages[pages.length - 1])} last />\n      </PaginationItem>\n    </Pagination>\n  );\n};\n\nMyPagination.propTypes = {\n  changePage: PropTypes.func,\n  pages: PropTypes.array,\n  activePage: PropTypes.number\n};\n\nMyPagination.defaultProps = {\n  changePage: () => {},\n  pages: [],\n  activePage: 1\n};\n\nexport default MyPagination;\n","import React from 'react';\nimport { Col } from 'reactstrap';\n\nimport { emptyPageSizes } from '../../consts';\n\nconst { xs, lg, md, sm } = emptyPageSizes;\n\nconst EmptyPage = () => (\n  <Col xs={xs} sm={sm} md={md} lg={lg}>\n    <h1 className=\"display-3 text-center\">Page is empty</h1>\n  </Col>\n);\n\nexport default EmptyPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Row } from 'reactstrap';\n\nimport { localStorageData } from '../../consts';\n\nimport { sortDrag, fetchData, changePage } from '../../actions';\n\nimport Loader from '../../components/Loader';\nimport Error from '../../components/Error';\n\nimport Table from '../../components/Table';\nimport Pagination from '../../components/Pagination';\nimport EmptyPage from '../../components/EmptyPage';\n\nconst enhance = connect(({ data, activePage }) => ({ data, activePage }), { fetchData, sortDrag, changePage });\n\nclass Home extends Component {\n  static propTypes = {\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      error: PropTypes.bool,\n      pages: PropTypes.array,\n      result: PropTypes.shape({\n        financials: PropTypes.array\n      })\n    }),\n    fetchData: PropTypes.func,\n    sortDrag: PropTypes.func,\n    changePage: PropTypes.func,\n    activePage: PropTypes.number\n  };\n\n  static defaultProps = {\n    data: {\n      loading: false,\n      error: false,\n      pages: [],\n      result: {\n        financials: []\n      }\n    },\n    fetchData: () => {},\n    sortDrag: () => {},\n    changePage: () => {},\n    activePage: 1\n  };\n\n  componentDidMount() {\n    const { fetchData } = this.props;\n\n    if (!localStorageData) {\n      fetchData();\n    }\n  }\n\n  render() {\n    const {\n      data: {\n        result: { financials = [] },\n        loading,\n        error,\n        pages = []\n      },\n      sortDrag,\n      changePage,\n      activePage\n    } = this.props;\n\n    const notEmtyTable = financials && financials.length;\n    const notEmtyPagination = pages && pages.length;\n    const isEmtyPage = !notEmtyTable && !notEmtyPagination;\n\n    return (\n      <Container className=\"mt-5\" fluid=\"md\">\n        <Row>\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Error />\n          ) : (\n            <div className=\"content\">\n              {notEmtyTable ? <Table result={financials} sortDrag={sortDrag} activePage={activePage} /> : null}\n              {notEmtyPagination ? <Pagination changePage={changePage} activePage={activePage} pages={pages} /> : null}\n              {isEmtyPage && <EmptyPage />}\n            </div>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default enhance(Home);\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from '../../store';\n\nimport HomePage from '../../containers/Home';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router basename=\"/IEXCloud/\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}