{"version":3,"sources":["serviceWorker.js","consts/index.js","reducers/data.js","reducers/index.js","utils/index.js","reducers/activePage.js","actions/index.js","api/index.js","sagas/data.js","sagas/index.js","store/index.js","components/Wave/index.js","components/Loader/index.js","components/Error/index.js","components/TableRow/index.js","components/Table/index.js","components/PaginationElement/index.js","components/Pagination/index.js","components/EmptyPage/index.js","containers/Home/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","FETCHED_DATA","URL","concat","localStorageData","localStorage","emptyPageSizes","size","offset","dotsList","id","baseClassName","initState","result","loading","rootReducer","combineReducers","data","arguments","length","undefined","_ref","type","droppableIndexStart","droppableIndexEnd","currentPageIndex","financials","myArray","chunkSize","results","subArray","splice","push","chunkArray","Object","objectSpread","_financials$currentPa","list","apply","toConsumableArray","dragging","activePage","page","requestData","requestDataSuccess","requestDataError","fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","Error","stop","this","fetchDataAsync","watchFetchData","rootSaga","put","call","delay","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","root","fork","sagas_marked","preloadedState","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","load","namespace","store","createStore","applyMiddleware","save","run","sagas","Wave","className","dotClasses","cn","react_default","createElement","map","_ref2","key","defaultProps","Loader","Spinner","color","components_Wave","onClick","reload","TableRow","index","reportDate","totalAssets","totalCash","totalDebt","react_beautiful_dnd_esm","draggableId","draggableProps","innerRef","dragHandleProps","assign","ref","scope","MyTable","sortDrag","onDragEnd","destination","source","Table","bordered","striped","hover","responsive","droppableId","_ref3","droppableProps","placeholder","item","i","items","flat","indexOf","getIndex","components_TableRow","PaginationElement","changePage","PaginationItem","PaginationLink","MyPagination","pages","isFirstPage","isLastPage","Pagination","disabled","first","previous","components_PaginationElement","last","xs","lg","md","sm","EmptyPage","Col","enhance","connect","Home","props","_this$props","_this$props$data","_this$props$data$resu","_this$props$data$resu2","symbol","forEach","getPages","components_Loader","components_Error","Container","fluid","Row","Fragment","components_Table","components_Pagination","components_EmptyPage","Component","App","es","react_router_dom","basename","react_router","exact","path","component","HomePage","ReactDOM","render","components_App","document","getElementById","process","href","origin","addEventListener","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d9d29626.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          /* eslint-disable no-console */\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n          /* eslint-enable */\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              /* eslint-disable no-console */\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n              /* eslint-enable */\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              /* eslint-disable no-console */\n              console.log('Content is cached for offline use.');\n              /* eslint-enable */\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      /* eslint-disable no-console */\n      console.error('Error during service worker registration:', error);\n      /* eslint-enable */\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log('No internet connection found. App is running in offline mode.');\n      /* eslint-enable */\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const REQUESTED_DATA = 'REQUESTED_DATA';\nexport const REQUESTED_DATA_SUCCEEDED = 'REQUESTED_DATA_SUCCEEDED';\nexport const REQUESTED_DATA_FAILED = 'REQUESTED_DATA_FAILED';\nexport const FETCHED_DATA = 'FETCHED_DATA';\n\nexport const DRAG_HAPPEND = 'DRAG_HAPPEND';\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const DATA_PER_PAGE = 10;\n\nconst STOCKS_COUNT = 12;\nconst BASE_PATH = 'https://sandbox.iexapis.com/stable';\nconst ENDPOINT_PATH = '/stock/AAPL/financials/';\nconst QUERY_PARAM = 'token=';\nconst API_KEY = 'Tpk_d232dd87ed34407dacc92eee1edbf407';\nexport const URL = `${BASE_PATH}${ENDPOINT_PATH}${STOCKS_COUNT}?${QUERY_PARAM}${API_KEY}`;\n\nexport const localStorageKey = 'applicationState';\nexport const localStorageData = localStorage[localStorageKey];\n\nexport const emptyPageSizes = {\n  xs: 12,\n  sm: { size: 10, offset: 1 },\n  md: { size: 8, offset: 2 },\n  lg: { size: 6, offset: 3 }\n};\n\nexport const dotsList = [\n  { id: 1, baseClassName: 'dot' },\n  { id: 2, baseClassName: 'dot' },\n  { id: 3, baseClassName: 'dot' }\n];\n","import { REQUESTED_DATA, REQUESTED_DATA_SUCCEEDED, REQUESTED_DATA_FAILED, DRAG_HAPPEND, DATA_PER_PAGE } from '../consts';\n\nimport { chunkArray, dragging } from '../utils';\n\nexport const initState = {\n  result: {},\n  loading: false,\n  error: false\n};\n\nexport default (state = initState, { type, result, droppableIndexStart, droppableIndexEnd, currentPageIndex }) => {\n  switch (type) {\n    case REQUESTED_DATA: {\n      return {\n        result: {},\n        loading: true,\n        error: false\n      };\n    }\n    case REQUESTED_DATA_SUCCEEDED: {\n      const financials = chunkArray(result.financials, DATA_PER_PAGE);\n\n      return {\n        result: {\n          ...result,\n          financials\n        },\n        loading: false,\n        error: false\n      };\n    }\n    case REQUESTED_DATA_FAILED: {\n      return {\n        result: {},\n        loading: false,\n        error: true\n      };\n    }\n    case DRAG_HAPPEND: {\n      const financials = dragging(droppableIndexStart, droppableIndexEnd, state.result.financials, currentPageIndex);\n\n      return {\n        ...state,\n        result: {\n          ...state.result,\n          financials\n        }\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport data from './data';\nimport activePage from './activePage';\n\nconst rootReducer = combineReducers({\n  data,\n  activePage\n});\n\nexport default rootReducer;\n","export const getIndex = (items, item) => {\n  const flatItems = items.flat();\n  const index = flatItems.indexOf(item) + 1;\n\n  return index;\n};\n\nexport const chunkArray = (myArray, chunkSize) => {\n  const results = [];\n\n  while (myArray.length) {\n    const subArray = myArray.splice(0, chunkSize);\n\n    results.push(subArray);\n  }\n\n  return [...results];\n};\n\nexport const getPages = list => {\n  const pages = [];\n\n  list.forEach((item, i) => pages.push(i + 1));\n\n  return pages;\n};\n\nexport const dragging = (droppableIndexStart, droppableIndexEnd, financials, currentPageIndex) => {\n  if (droppableIndexStart !== droppableIndexEnd) {\n    const list = financials[currentPageIndex].splice(droppableIndexStart, 1);\n    financials[currentPageIndex].splice(droppableIndexEnd, 0, ...list);\n  }\n\n  return [...financials];\n};\n","import { CHANGE_PAGE } from '../consts';\n\nexport const initState = 1;\n\nexport default (state = initState, { type, page }) => {\n  switch (type) {\n    case CHANGE_PAGE:\n      return page;\n    default:\n      return state;\n  }\n};\n","import { REQUESTED_DATA, REQUESTED_DATA_SUCCEEDED, REQUESTED_DATA_FAILED, FETCHED_DATA, DRAG_HAPPEND, CHANGE_PAGE } from '../consts';\n\nexport const requestData = () => ({ type: REQUESTED_DATA });\nexport const requestDataSuccess = result => ({ type: REQUESTED_DATA_SUCCEEDED, result });\nexport const requestDataError = () => ({ type: REQUESTED_DATA_FAILED });\nexport const fetchData = () => ({ type: FETCHED_DATA });\n\nexport const sortDrag = (droppableIndexStart, droppableIndexEnd, currentPageIndex) => ({\n  type: DRAG_HAPPEND,\n  droppableIndexStart,\n  droppableIndexEnd,\n  currentPageIndex\n});\n\nexport const changePage = page => ({ type: CHANGE_PAGE, page });\n","import { URL } from '../consts';\n\nexport const fetchData = async () => {\n  try {\n    const response = await fetch(URL);\n    return await response.json();\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n","import { takeLatest, put, call, all, delay } from 'redux-saga/effects';\n\nimport { requestData, requestDataSuccess, requestDataError } from '../actions';\n\nimport { FETCHED_DATA } from '../consts';\n\nimport { fetchData } from '../api';\n\nexport function* fetchDataAsync() {\n  try {\n    yield put(requestData());\n    const data = yield call(fetchData);\n    yield delay(400);\n    yield put(requestDataSuccess(data));\n  } catch {\n    yield put(requestDataError());\n  }\n}\n\nexport function* watchFetchData() {\n  yield takeLatest(FETCHED_DATA, fetchDataAsync);\n}\n\nexport default function* rootSaga() {\n  yield all([watchFetchData()]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport data from './data';\n\nexport default function* root() {\n  yield all([fork(data)]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { save, load } from 'redux-localstorage-simple';\n\nimport { localStorageKey } from '../consts';\n\nimport rootReducer from '../reducers/';\n\nimport sagas from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst persistedState = load({ namespace: localStorageKey });\n\nconst configureStore = preloadedState => createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(sagaMiddleware, save({ namespace: localStorageKey }))));\n\nconst store = configureStore(persistedState);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { dotsList } from '../../consts';\n\nconst Wave = ({ className }) => {\n  const dotClasses = (baseClassName, className) => cn(baseClassName, className);\n\n  return (\n    <span id=\"wave\">\n      {dotsList.map(({ id, baseClassName }) => (\n        <span key={id} className={dotClasses(baseClassName, className)} />\n      ))}\n    </span>\n  );\n};\n\nWave.propTypes = {\n  className: PropTypes.string\n};\n\nWave.defaultProps = {\n  className: 'bg-primary'\n};\n\nexport default Wave;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nimport Wave from '../Wave';\n\nconst Loader = () => (\n  <div className=\"center\">\n    <Spinner color=\"primary\" />\n    <p className=\"text-primary\">\n      Loading\n      <Wave className=\"bg-primary\" />\n    </p>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\n\nimport Wave from '../Wave';\n\nconst Error = () => (\n  <div className=\"center\">\n    <p className=\"text-danger\">\n      Error, please clear cache and try again\n      <Wave className=\"bg-danger\" />\n    </p>\n    <button type=\"button\" className=\"btn btn-outline-danger btn-block\" onClick={() => window.location.reload()}>\n      Reload\n    </button>\n  </div>\n);\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst TableRow = ({ index, id, reportDate, totalAssets, totalCash, totalDebt }) => (\n  <Draggable draggableId={`${id}`} index={id}>\n    {({ draggableProps, innerRef, dragHandleProps }) => (\n      <tr {...draggableProps} ref={innerRef} {...dragHandleProps}>\n        <th scope=\"row\">{index}</th>\n        <td>{reportDate}</td>\n        <td>{totalAssets}</td>\n        <td>{totalCash}</td>\n        <td>{totalDebt}</td>\n      </tr>\n    )}\n  </Draggable>\n);\n\nTableRow.propTypes = {\n  reportDate: PropTypes.string,\n  totalAssets: PropTypes.number,\n  totalCash: PropTypes.number,\n  totalDebt: PropTypes.number,\n  id: PropTypes.number,\n  index: PropTypes.number\n};\n\nTableRow.defaultProps = {\n  reportDate: '',\n  totalAssets: 0,\n  totalCash: 0,\n  totalDebt: 0,\n  id: 0,\n  index: 1\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'reactstrap';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport { getIndex } from '../../utils';\n\nimport TableRow from '../TableRow';\n\nconst MyTable = ({ sortDrag, result, activePage }) => {\n  const currentPageIndex = activePage - 1;\n\n  const onDragEnd = ({ destination, source: { index: droppableIndexStart } }) => {\n    if (!destination) {\n      return;\n    }\n\n    const { index: droppableIndexEnd } = destination;\n\n    sortDrag(droppableIndexStart, droppableIndexEnd, currentPageIndex);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Table bordered striped hover responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Report date</th>\n            <th>Total assets</th>\n            <th>Total cash</th>\n            <th>Total debt</th>\n          </tr>\n        </thead>\n        <Droppable droppableId=\"tbody\">\n          {({ droppableProps, innerRef, placeholder }) => (\n            <tbody {...droppableProps} ref={innerRef}>\n              {result[currentPageIndex].map((item, i) => {\n                const { reportDate, totalAssets, totalCash, totalDebt } = item;\n                const index = getIndex(result, item);\n\n                return <TableRow key={i} index={index} id={i} reportDate={reportDate} totalAssets={totalAssets} totalCash={totalCash} totalDebt={totalDebt} />;\n              })}\n              {placeholder}\n            </tbody>\n          )}\n        </Droppable>\n      </Table>\n    </DragDropContext>\n  );\n};\n\nMyTable.propTypes = {\n  sortDrag: PropTypes.func,\n  result: PropTypes.array.isRequired,\n  activePage: PropTypes.number\n};\n\nMyTable.defaultProps = {\n  sortDrag: () => {},\n  activePage: 1\n};\n\nexport default MyTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PaginationItem, PaginationLink } from 'reactstrap';\n\nconst PaginationElement = ({ page, activePage, changePage }) => (\n  <PaginationItem id={`item_${page}`} className={page === activePage ? 'active' : ''}>\n    <PaginationLink id={page} onClick={() => changePage(page)}>\n      {page}\n    </PaginationLink>\n  </PaginationItem>\n);\n\nPaginationElement.propTypes = {\n  changePage: PropTypes.func,\n  page: PropTypes.number,\n  activePage: PropTypes.number\n};\n\nPaginationElement.defaultProps = {\n  changePage: () => {},\n  page: 1,\n  activePage: 1\n};\n\nexport default PaginationElement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nimport PaginationElement from '../PaginationElement';\n\nconst MyPagination = ({ pages, activePage, changePage }) => {\n  const isFirstPage = activePage === 1;\n  const isLastPage = activePage === pages[pages.length - 1];\n\n  return (\n    <Pagination>\n      <PaginationItem disabled={isFirstPage}>\n        <PaginationLink onClick={() => changePage(pages[0])} first />\n      </PaginationItem>\n      <PaginationItem disabled={isFirstPage}>\n        <PaginationLink onClick={() => changePage(activePage - 1)} previous />\n      </PaginationItem>\n      {pages.map(page => (\n        <PaginationElement key={page} page={page} activePage={activePage} changePage={() => changePage(page)} />\n      ))}\n      <PaginationItem disabled={isLastPage}>\n        <PaginationLink onClick={() => changePage(activePage + 1)} next />\n      </PaginationItem>\n      <PaginationItem disabled={isLastPage}>\n        <PaginationLink onClick={() => changePage(pages[pages.length - 1])} last />\n      </PaginationItem>\n    </Pagination>\n  );\n};\n\nMyPagination.propTypes = {\n  changePage: PropTypes.func,\n  pages: PropTypes.array,\n  activePage: PropTypes.number\n};\n\nMyPagination.defaultProps = {\n  changePage: () => {},\n  pages: [],\n  activePage: 1\n};\n\nexport default MyPagination;\n","import React from 'react';\nimport { Col } from 'reactstrap';\n\nimport { emptyPageSizes } from '../../consts';\n\nconst { xs, lg, md, sm } = emptyPageSizes;\n\nconst EmptyPage = () => (\n  <Col xs={xs} sm={sm} md={md} lg={lg}>\n    <h1 className=\"display-3 text-center\">Page is empty</h1>\n  </Col>\n);\n\nexport default EmptyPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Row } from 'reactstrap';\n\nimport { localStorageData } from '../../consts';\n\nimport { sortDrag, fetchData, changePage } from '../../actions';\n\nimport { getPages } from '../../utils';\n\nimport Loader from '../../components/Loader';\nimport Error from '../../components/Error';\n\nimport Table from '../../components/Table';\nimport Pagination from '../../components/Pagination';\nimport EmptyPage from '../../components/EmptyPage';\n\nconst enhance = connect(({ data, activePage }) => ({ data, activePage }), { fetchData, sortDrag, changePage });\n\nclass Home extends Component {\n  static propTypes = {\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      error: PropTypes.bool,\n      result: PropTypes.shape({\n        financials: PropTypes.array,\n        symbol: PropTypes.string\n      })\n    }),\n    fetchData: PropTypes.func,\n    sortDrag: PropTypes.func,\n    changePage: PropTypes.func,\n    activePage: PropTypes.number\n  };\n\n  static defaultProps = {\n    data: {\n      loading: false,\n      error: false,\n      result: {\n        financials: [],\n        symbol: ''\n      }\n    },\n    fetchData: () => {},\n    sortDrag: () => {},\n    changePage: () => {},\n    activePage: 1\n  };\n\n  componentDidMount() {\n    const { fetchData } = this.props;\n\n    if (!localStorageData) {\n      fetchData();\n    }\n  }\n\n  render() {\n    const {\n      data: {\n        result: { financials = [], symbol },\n        loading,\n        error\n      },\n      sortDrag,\n      changePage,\n      activePage\n    } = this.props;\n\n    const pages = getPages(financials);\n\n    if (loading) return <Loader />;\n\n    if (error) return <Error />;\n\n    return (\n      <Container className=\"mt-3\" fluid=\"md\">\n        <Row>\n          <div className=\"content\">\n            {financials.length ? (\n              <>\n                <h1 className=\"text-center mb-3\">Symbol: {symbol}</h1>\n                <Table result={financials} sortDrag={sortDrag} activePage={activePage} />\n                <Pagination changePage={changePage} activePage={activePage} pages={pages} />\n              </>\n            ) : (\n              <EmptyPage />\n            )}\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default enhance(Home);\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from '../../store';\n\nimport HomePage from '../../containers/Home';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router basename=\"/IEXCloud/\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}